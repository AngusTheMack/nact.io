{"version":3,"sources":["webpack:///path---docs-reasonml-getting-started-57416619e24a66ba59f6.js","webpack:///./.cache/json/docs-reasonml-getting-started.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/docs-reasonml-getting-started.json","module","exports","data","allPostTitles","edges","node","frontmatter","title","lesson","category","chapter","type","language","fields","slug","postBySlug","html","timeToRead","excerpt","cover","date","tags","pathContext"],"mappings":"AAAAA,cAAc,qBAERC,uFACA,SAAUC,EAAQC,GCHxBD,EAAAC,SACAC,MACAC,eACAC,QAEAC,MACAC,aACAC,MAAA,eACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,oBAKAT,MACAC,aACAC,MAAA,oBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,YAEAC,QACAC,KAAA,yBAKAT,MACAC,aACAC,MAAA,kBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,YAEAC,QACAC,KAAA,uBAKAT,MACAC,aACAC,MAAA,oBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,YAEAC,QACAC,KAAA,yBAKAT,MACAC,aACAC,MAAA,sBACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,2BAKAT,MACAC,aACAC,MAAA,WACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,gBAKAT,MACAC,aACAC,MAAA,cACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,mBAKAT,MACAC,aACAC,MAAA,cACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,mBAKAT,MACAC,aACAC,MAAA,eACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,oBAKAT,MACAC,aACAC,MAAA,eACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,oBAKAT,MACAC,aACAC,MAAA,WACAC,OAAA,EACAC,SAAA,WACAC,QAAA,EACAC,KAAA,SACAC,SAAA,MAEAC,QACAC,KAAA,iBAMAC,YACAC,KAAA,0rLACAC,WAAA,EACAC,QAAA,+IACAZ,aACAC,MAAA,kBACAY,MAAA,+CACAC,KAAA,aACAX,SAAA,WACAY,MACA,kBACA,OACA,SACA,gBAEAT,SAAA,YAEAC,QACAC,KAAA,sBAIAQ,aACAR,KAAA,mBACAL,SAAA","file":"path---docs-reasonml-getting-started-57416619e24a66ba59f6.js","sourcesContent":["webpackJsonp([3078647806357723600],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/docs-reasonml-getting-started.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\n\t\t\"data\": {\n\t\t\t\"allPostTitles\": {\n\t\t\t\t\"edges\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Introduction\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/introduction\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Getting Started 3\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/getting-started-3\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Getting Started 3\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/getting-started-3\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Querying\",\n\t\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/querying\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Persistence\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/persistence\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Persistence\",\n\t\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/persistence\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\t\"title\": \"Timeouts\",\n\t\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\t\"slug\": \"/timeouts\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\t\"postBySlug\": {\n\t\t\t\t\"html\": \"<p>Reason Nact has only been tested to work on Node 8 and above. You can install nact in your project by invoking the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --save reason-nact\\n</code></pre>\\n      </div>\\n<p>You'll also need to add <code>reason-nact</code> to your dependencies in the <code>bsconfig.json</code> file.</p>\\n<p>Once installed, you need to import the start function, which starts and then returns the actor system.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token constructor variable\\\">Nact</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> system <span class=\\\"token operator\\\">=</span> start<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Once you have a reference to the system, it is now possible to create our first actor. To create an actor you have to <code>spawn</code> it.  As is traditional, let us create an actor which says hello when a message is sent to it. Since this actor doesn't require any state, we can use the simpler <code>spawnStateless</code> function.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">type</span> greetingMsg <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> greeter <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"greeter\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> print_endline<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello \\\"</span> <span class=\\\"token operator\\\">+</span><span class=\\\"token operator\\\">+</span> name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\ndispatch<span class=\\\"token punctuation\\\">(</span>greeter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>The first unamed argument to <code>spawnStateless</code> is the parent, which is in this case the actor system. The <a href=\\\"#hierarchy\\\">hierarchy</a> section will go into more detail about this.</p>\\n<p>The second unamed argument to <code>spawnStateless</code> is a function which is invoked when a message is received.</p>\\n<p>The name argument to <code>spawnStateless</code> is optional, and if omitted, the actor is automatically assigned a name by the system.</p>\\n<p>To communicate with the greeter, we need to <code>dispatch</code> a message to it informing it who we are:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code>dispatch<span class=\\\"token punctuation\\\">(</span>greeter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This should print <code>\\\"Hello Erlich Bachman\\\"</code> to the console. </p>\\n<blockquote>\\n<p>Note: Stateless actors can service multiple requests at the same time. Statelessness means that such actors do not have to cater for concurrency issues.</p>\\n</blockquote>\\n<p>To complete this example, we need to shutdown our system. We can do this by calling <code>stop(system)</code></p>\\n<p>An alternative to calling dispatch is opening <code>Nact.Operators</code> and using the  <code>&#x3C;-&#x3C;</code> operator:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token class-name\\\">Nact</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constructor variable\\\">Operators</span><span class=\\\"token punctuation\\\">;</span>\\ngreeter <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">></span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span> greeter<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\n\t\t\t\t\"timeToRead\": 2,\n\t\t\t\t\"excerpt\": \"Reason Nact has only been tested to work on Node 8 and above. You can install nact in your project by invoking the following: You'll also...\",\n\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\t\"cover\": \"https://unsplash.it/400/300/?random?BoldMage\",\n\t\t\t\t\t\"date\": \"11/12/2017\",\n\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\"tags\": [\n\t\t\t\t\t\t\"getting-started\",\n\t\t\t\t\t\t\"nact\",\n\t\t\t\t\t\t\"reason\",\n\t\t\t\t\t\t\"bucklescript\"\n\t\t\t\t\t],\n\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t},\n\t\t\t\t\"fields\": {\n\t\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"pathContext\": {\n\t\t\t\"slug\": \"/getting-started\",\n\t\t\t\"category\": \"reasonml\"\n\t\t}\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---docs-reasonml-getting-started-57416619e24a66ba59f6.js","module.exports = {\n\t\"data\": {\n\t\t\"allPostTitles\": {\n\t\t\t\"edges\": [\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Introduction\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 1,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/introduction\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Getting Started 3\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/getting-started-3\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Getting Started 3\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": \"reasonml\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/getting-started-3\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Actor Communication\",\n\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/actor-communication\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Querying\",\n\t\t\t\t\t\t\t\"lesson\": 4,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 2,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/querying\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Persistence\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/persistence\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Persistence\",\n\t\t\t\t\t\t\t\"lesson\": 1,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/persistence\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Snapshotting\",\n\t\t\t\t\t\t\t\"lesson\": 2,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/snapshotting\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t\"node\": {\n\t\t\t\t\t\t\"frontmatter\": {\n\t\t\t\t\t\t\t\"title\": \"Timeouts\",\n\t\t\t\t\t\t\t\"lesson\": 3,\n\t\t\t\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\t\t\t\"chapter\": 3,\n\t\t\t\t\t\t\t\"type\": \"lesson\",\n\t\t\t\t\t\t\t\"language\": null\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fields\": {\n\t\t\t\t\t\t\t\"slug\": \"/timeouts\"\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t\"postBySlug\": {\n\t\t\t\"html\": \"<p>Reason Nact has only been tested to work on Node 8 and above. You can install nact in your project by invoking the following:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-bash\\\"><code><span class=\\\"token function\\\">npm</span> <span class=\\\"token function\\\">install</span> --save reason-nact\\n</code></pre>\\n      </div>\\n<p>You'll also need to add <code>reason-nact</code> to your dependencies in the <code>bsconfig.json</code> file.</p>\\n<p>Once installed, you need to import the start function, which starts and then returns the actor system.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token constructor variable\\\">Nact</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> system <span class=\\\"token operator\\\">=</span> start<span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>Once you have a reference to the system, it is now possible to create our first actor. To create an actor you have to <code>spawn</code> it.  As is traditional, let us create an actor which says hello when a message is sent to it. Since this actor doesn't require any state, we can use the simpler <code>spawnStateless</code> function.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">type</span> greetingMsg <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> string<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">let</span> greeter <span class=\\\"token operator\\\">=</span>\\n  spawnStateless<span class=\\\"token punctuation\\\">(</span>\\n    <span class=\\\"token operator\\\">~</span>name<span class=\\\"token operator\\\">=</span><span class=\\\"token string\\\">\\\"greeter\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n    system<span class=\\\"token punctuation\\\">,</span>\\n    <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">,</span> _<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> print_endline<span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Hello \\\"</span> <span class=\\\"token operator\\\">+</span><span class=\\\"token operator\\\">+</span> name<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">|</span><span class=\\\"token operator\\\">></span> <span class=\\\"token class-name\\\">Js</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">.</span>resolve\\n  <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\ndispatch<span class=\\\"token punctuation\\\">(</span>greeter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span>name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span><span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>The first unamed argument to <code>spawnStateless</code> is the parent, which is in this case the actor system. The <a href=\\\"#hierarchy\\\">hierarchy</a> section will go into more detail about this.</p>\\n<p>The second unamed argument to <code>spawnStateless</code> is a function which is invoked when a message is received.</p>\\n<p>The name argument to <code>spawnStateless</code> is optional, and if omitted, the actor is automatically assigned a name by the system.</p>\\n<p>To communicate with the greeter, we need to <code>dispatch</code> a message to it informing it who we are:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code>dispatch<span class=\\\"token punctuation\\\">(</span>greeter<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<p>This should print <code>\\\"Hello Erlich Bachman\\\"</code> to the console. </p>\\n<blockquote>\\n<p>Note: Stateless actors can service multiple requests at the same time. Statelessness means that such actors do not have to cater for concurrency issues.</p>\\n</blockquote>\\n<p>To complete this example, we need to shutdown our system. We can do this by calling <code>stop(system)</code></p>\\n<p>An alternative to calling dispatch is opening <code>Nact.Operators</code> and using the  <code>&#x3C;-&#x3C;</code> operator:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-reason\\\"><code><span class=\\\"token keyword\\\">open</span> <span class=\\\"token class-name\\\">Nact</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token constructor variable\\\">Operators</span><span class=\\\"token punctuation\\\">;</span>\\ngreeter <span class=\\\"token operator\\\">&lt;</span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">{</span> name<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Erlich Bachman\\\"</span> <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token operator\\\">></span><span class=\\\"token operator\\\">-</span><span class=\\\"token operator\\\">></span> greeter<span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\n\t\t\t\"timeToRead\": 2,\n\t\t\t\"excerpt\": \"Reason Nact has only been tested to work on Node 8 and above. You can install nact in your project by invoking the following: You'll also...\",\n\t\t\t\"frontmatter\": {\n\t\t\t\t\"title\": \"Getting Started\",\n\t\t\t\t\"cover\": \"https://unsplash.it/400/300/?random?BoldMage\",\n\t\t\t\t\"date\": \"11/12/2017\",\n\t\t\t\t\"category\": \"reasonml\",\n\t\t\t\t\"tags\": [\n\t\t\t\t\t\"getting-started\",\n\t\t\t\t\t\"nact\",\n\t\t\t\t\t\"reason\",\n\t\t\t\t\t\"bucklescript\"\n\t\t\t\t],\n\t\t\t\t\"language\": \"reasonml\"\n\t\t\t},\n\t\t\t\"fields\": {\n\t\t\t\t\"slug\": \"/getting-started\"\n\t\t\t}\n\t\t}\n\t},\n\t\"pathContext\": {\n\t\t\"slug\": \"/getting-started\",\n\t\t\"category\": \"reasonml\"\n\t}\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/docs-reasonml-getting-started.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/docs-reasonml-getting-started.json\n// module chunks = 3078647806357723600"],"sourceRoot":""}